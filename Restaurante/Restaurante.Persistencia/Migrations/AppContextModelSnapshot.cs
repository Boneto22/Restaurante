// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Restaurante.Persistencia;

namespace Restaurante.Persistencia.Migrations
{
    [DbContext(typeof(AppContext))]
    partial class AppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Restaurante.Dominio.Asignacion", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("personaid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("personaid");

                    b.ToTable("Asignaciones");
                });

            modelBuilder.Entity("Restaurante.Dominio.Comanda", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("mesaid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("mesaid");

                    b.ToTable("Comandas");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Comanda");
                });

            modelBuilder.Entity("Restaurante.Dominio.Detal_Asignacion", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("asignacionid")
                        .HasColumnType("int");

                    b.Property<int?>("mesaid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("asignacionid");

                    b.HasIndex("mesaid");

                    b.ToTable("Deta_Asignaciones");
                });

            modelBuilder.Entity("Restaurante.Dominio.Menu", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("precio")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("Restaurante.Dominio.Mesa", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ubicacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Mesas");
                });

            modelBuilder.Entity("Restaurante.Dominio.Persona", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("documento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Personas");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Persona");
                });

            modelBuilder.Entity("Restaurante.Dominio.Detal_comanda", b =>
                {
                    b.HasBaseType("Restaurante.Dominio.Comanda");

                    b.Property<int>("cant")
                        .HasColumnType("int")
                        .HasColumnName("Detal_comanda_cant");

                    b.Property<int>("idcomanda")
                        .HasColumnType("int");

                    b.Property<int?>("menuid")
                        .HasColumnType("int")
                        .HasColumnName("Detal_comanda_menuid");

                    b.HasIndex("menuid");

                    b.HasDiscriminator().HasValue("Detal_comanda");
                });

            modelBuilder.Entity("Restaurante.Dominio.Factura", b =>
                {
                    b.HasBaseType("Restaurante.Dominio.Comanda");

                    b.Property<int>("idcomanda")
                        .HasColumnType("int")
                        .HasColumnName("Factura_idcomanda");

                    b.Property<int?>("personaid")
                        .HasColumnType("int");

                    b.Property<decimal>("precio")
                        .HasColumnType("decimal(18,2)");

                    b.HasIndex("personaid");

                    b.HasDiscriminator().HasValue("Factura");
                });

            modelBuilder.Entity("Restaurante.Dominio.TipoPersona", b =>
                {
                    b.HasBaseType("Restaurante.Dominio.Persona");

                    b.Property<int>("idpersona")
                        .HasColumnType("int");

                    b.Property<string>("tipoP")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("TipoPersona");
                });

            modelBuilder.Entity("Restaurante.Dominio.Deta_Fact", b =>
                {
                    b.HasBaseType("Restaurante.Dominio.Factura");

                    b.Property<int>("cant")
                        .HasColumnType("int");

                    b.Property<int>("idFactura")
                        .HasColumnType("int");

                    b.Property<int?>("menuid")
                        .HasColumnType("int");

                    b.HasIndex("menuid");

                    b.HasDiscriminator().HasValue("Deta_Fact");
                });

            modelBuilder.Entity("Restaurante.Dominio.Asignacion", b =>
                {
                    b.HasOne("Restaurante.Dominio.Persona", "persona")
                        .WithMany()
                        .HasForeignKey("personaid");

                    b.Navigation("persona");
                });

            modelBuilder.Entity("Restaurante.Dominio.Comanda", b =>
                {
                    b.HasOne("Restaurante.Dominio.Mesa", "mesa")
                        .WithMany()
                        .HasForeignKey("mesaid");

                    b.Navigation("mesa");
                });

            modelBuilder.Entity("Restaurante.Dominio.Detal_Asignacion", b =>
                {
                    b.HasOne("Restaurante.Dominio.Asignacion", "asignacion")
                        .WithMany()
                        .HasForeignKey("asignacionid");

                    b.HasOne("Restaurante.Dominio.Mesa", "mesa")
                        .WithMany()
                        .HasForeignKey("mesaid");

                    b.Navigation("asignacion");

                    b.Navigation("mesa");
                });

            modelBuilder.Entity("Restaurante.Dominio.Detal_comanda", b =>
                {
                    b.HasOne("Restaurante.Dominio.Menu", "menu")
                        .WithMany()
                        .HasForeignKey("menuid");

                    b.Navigation("menu");
                });

            modelBuilder.Entity("Restaurante.Dominio.Factura", b =>
                {
                    b.HasOne("Restaurante.Dominio.Persona", "persona")
                        .WithMany()
                        .HasForeignKey("personaid");

                    b.Navigation("persona");
                });

            modelBuilder.Entity("Restaurante.Dominio.Deta_Fact", b =>
                {
                    b.HasOne("Restaurante.Dominio.Menu", "menu")
                        .WithMany()
                        .HasForeignKey("menuid");

                    b.Navigation("menu");
                });
#pragma warning restore 612, 618
        }
    }
}
